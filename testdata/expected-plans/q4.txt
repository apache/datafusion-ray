DataFusion Logical Plan
=======================

Sort: orders.o_orderpriority ASC NULLS LAST
  Projection: orders.o_orderpriority, count(*) AS order_count
    Aggregate: groupBy=[[orders.o_orderpriority]], aggr=[[count(Int64(1)) AS count(*)]]
      Projection: orders.o_orderpriority
        LeftSemi Join: orders.o_orderkey = __correlated_sq_1.l_orderkey
          Projection: orders.o_orderkey, orders.o_orderpriority
            Filter: orders.o_orderdate >= Date32("1995-04-01") AND orders.o_orderdate < Date32("1995-07-01")
              TableScan: orders projection=[o_orderkey, o_orderdate, o_orderpriority], partial_filters=[orders.o_orderdate >= Date32("1995-04-01"), orders.o_orderdate < Date32("1995-07-01")]
          SubqueryAlias: __correlated_sq_1
            Projection: lineitem.l_orderkey
              Filter: lineitem.l_receiptdate > lineitem.l_commitdate
                TableScan: lineitem projection=[l_orderkey, l_commitdate, l_receiptdate], partial_filters=[lineitem.l_receiptdate > lineitem.l_commitdate]

DataFusion Physical Plan
========================

SortPreservingMergeExec: [o_orderpriority@0 ASC NULLS LAST]
  SortExec: expr=[o_orderpriority@0 ASC NULLS LAST], preserve_partitioning=[true]
    ProjectionExec: expr=[o_orderpriority@0 as o_orderpriority, count(*)@1 as order_count]
      AggregateExec: mode=FinalPartitioned, gby=[o_orderpriority@0 as o_orderpriority], aggr=[count(*)]
        CoalesceBatchesExec: target_batch_size=8192
          RepartitionExec: partitioning=Hash([o_orderpriority@0], 4), input_partitions=4
            AggregateExec: mode=Partial, gby=[o_orderpriority@0 as o_orderpriority], aggr=[count(*)]
              CoalesceBatchesExec: target_batch_size=8192
                HashJoinExec: mode=Partitioned, join_type=LeftSemi, on=[(o_orderkey@0, l_orderkey@0)], projection=[o_orderpriority@1]
                  CoalesceBatchesExec: target_batch_size=8192
                    RepartitionExec: partitioning=Hash([o_orderkey@0], 4), input_partitions=4
                      ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_orderpriority@2 as o_orderpriority]
                        CoalesceBatchesExec: target_batch_size=8192
                          FilterExec: o_orderdate@1 >= 1995-04-01 AND o_orderdate@1 < 1995-07-01
                            ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_orderdate, o_orderpriority], predicate=o_orderdate@4 >= 1995-04-01 AND o_orderdate@4 < 1995-07-01, pruning_predicate=CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_max@0 >= 1995-04-01 END AND CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_min@3 < 1995-07-01 END, required_guarantees=[]
                  CoalesceBatchesExec: target_batch_size=8192
                    RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
                      ProjectionExec: expr=[l_orderkey@0 as l_orderkey]
                        CoalesceBatchesExec: target_batch_size=8192
                          FilterExec: l_receiptdate@2 > l_commitdate@1
                            ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_commitdate, l_receiptdate], predicate=l_receiptdate@12 > l_commitdate@11

RaySQL Plan
===========

Query Stage #0 (4 -> 4):
ShuffleWriterExec(stage_id=0, output_partitioning=Hash([Column { name: "o_orderkey", index: 0 }], 4))
  ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_orderpriority@2 as o_orderpriority]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: o_orderdate@1 >= 1995-04-01 AND o_orderdate@1 < 1995-07-01
        ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_orderdate, o_orderpriority], predicate=o_orderdate@4 >= 1995-04-01 AND o_orderdate@4 < 1995-07-01, pruning_predicate=CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_max@0 >= 1995-04-01 END AND CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_min@3 < 1995-07-01 END, required_guarantees=[]

Query Stage #1 (4 -> 4):
ShuffleWriterExec(stage_id=1, output_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))
  ProjectionExec: expr=[l_orderkey@0 as l_orderkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: l_receiptdate@2 > l_commitdate@1
        ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_commitdate, l_receiptdate], predicate=l_receiptdate@12 > l_commitdate@11

Query Stage #2 (4 -> 4):
ShuffleWriterExec(stage_id=2, output_partitioning=Hash([Column { name: "o_orderpriority", index: 0 }], 4))
  AggregateExec: mode=Partial, gby=[o_orderpriority@0 as o_orderpriority], aggr=[count(*)]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=LeftSemi, on=[(o_orderkey@0, l_orderkey@0)], projection=[o_orderpriority@1]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=0, input_partitioning=Hash([Column { name: "o_orderkey", index: 0 }], 4))
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=1, input_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))

Query Stage #3 (4 -> 4):
ShuffleWriterExec(stage_id=3, output_partitioning=Hash([Column { name: "o_orderpriority", index: 0 }], 4))
  SortExec: expr=[o_orderpriority@0 ASC NULLS LAST], preserve_partitioning=[true]
    ProjectionExec: expr=[o_orderpriority@0 as o_orderpriority, count(*)@1 as order_count]
      AggregateExec: mode=FinalPartitioned, gby=[o_orderpriority@0 as o_orderpriority], aggr=[count(*)]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=2, input_partitioning=Hash([Column { name: "o_orderpriority", index: 0 }], 4))

Query Stage #4 (4 -> 1):
SortPreservingMergeExec: [o_orderpriority@0 ASC NULLS LAST]
  ShuffleReaderExec(stage_id=3, input_partitioning=Hash([Column { name: "o_orderpriority", index: 0 }], 4))

