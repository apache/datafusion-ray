DataFusion Logical Plan
=======================

Limit: skip=0, fetch=100
  Sort: orders.o_totalprice DESC NULLS FIRST, orders.o_orderdate ASC NULLS LAST, fetch=100
    Aggregate: groupBy=[[customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice]], aggr=[[sum(lineitem.l_quantity)]]
      LeftSemi Join: orders.o_orderkey = __correlated_sq_1.l_orderkey
        Projection: customer.c_custkey, customer.c_name, orders.o_orderkey, orders.o_totalprice, orders.o_orderdate, lineitem.l_quantity
          Inner Join: orders.o_orderkey = lineitem.l_orderkey
            Projection: customer.c_custkey, customer.c_name, orders.o_orderkey, orders.o_totalprice, orders.o_orderdate
              Inner Join: customer.c_custkey = orders.o_custkey
                TableScan: customer projection=[c_custkey, c_name]
                TableScan: orders projection=[o_orderkey, o_custkey, o_totalprice, o_orderdate]
            TableScan: lineitem projection=[l_orderkey, l_quantity]
        SubqueryAlias: __correlated_sq_1
          Projection: lineitem.l_orderkey
            Filter: sum(lineitem.l_quantity) > Decimal128(Some(31300),21,2)
              Aggregate: groupBy=[[lineitem.l_orderkey]], aggr=[[sum(lineitem.l_quantity)]]
                TableScan: lineitem projection=[l_orderkey, l_quantity]

DataFusion Physical Plan
========================

GlobalLimitExec: skip=0, fetch=100
  SortPreservingMergeExec: [o_totalprice@4 DESC,o_orderdate@3 ASC NULLS LAST], fetch=100
    SortExec: TopK(fetch=100), expr=[o_totalprice@4 DESC,o_orderdate@3 ASC NULLS LAST], preserve_partitioning=[true]
      AggregateExec: mode=FinalPartitioned, gby=[c_name@0 as c_name, c_custkey@1 as c_custkey, o_orderkey@2 as o_orderkey, o_orderdate@3 as o_orderdate, o_totalprice@4 as o_totalprice], aggr=[sum(lineitem.l_quantity)]
        CoalesceBatchesExec: target_batch_size=8192
          RepartitionExec: partitioning=Hash([c_name@0, c_custkey@1, o_orderkey@2, o_orderdate@3, o_totalprice@4], 4), input_partitions=4
            AggregateExec: mode=Partial, gby=[c_name@1 as c_name, c_custkey@0 as c_custkey, o_orderkey@2 as o_orderkey, o_orderdate@4 as o_orderdate, o_totalprice@3 as o_totalprice], aggr=[sum(lineitem.l_quantity)]
              CoalesceBatchesExec: target_batch_size=8192
                HashJoinExec: mode=Partitioned, join_type=RightSemi, on=[(l_orderkey@0, o_orderkey@2)]
                  ProjectionExec: expr=[l_orderkey@0 as l_orderkey]
                    CoalesceBatchesExec: target_batch_size=8192
                      FilterExec: sum(lineitem.l_quantity)@1 > Some(31300),21,2
                        AggregateExec: mode=FinalPartitioned, gby=[l_orderkey@0 as l_orderkey], aggr=[sum(lineitem.l_quantity)]
                          CoalesceBatchesExec: target_batch_size=8192
                            RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
                              AggregateExec: mode=Partial, gby=[l_orderkey@0 as l_orderkey], aggr=[sum(lineitem.l_quantity)]
                                ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_quantity]
                  CoalesceBatchesExec: target_batch_size=8192
                    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(o_orderkey@2, l_orderkey@0)], projection=[c_custkey@0, c_name@1, o_orderkey@2, o_totalprice@3, o_orderdate@4, l_quantity@6]
                      CoalesceBatchesExec: target_batch_size=8192
                        RepartitionExec: partitioning=Hash([o_orderkey@2], 4), input_partitions=4
                          CoalesceBatchesExec: target_batch_size=8192
                            HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_custkey@0, o_custkey@1)], projection=[c_custkey@0, c_name@1, o_orderkey@2, o_totalprice@4, o_orderdate@5]
                              CoalesceBatchesExec: target_batch_size=8192
                                RepartitionExec: partitioning=Hash([c_custkey@0], 4), input_partitions=4
                                  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:0..3391370], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:3391370..6782740], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:6782740..6784675, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:0..3389435], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:3389435..6780803]]}, projection=[c_custkey, c_name]
                              CoalesceBatchesExec: target_batch_size=8192
                                RepartitionExec: partitioning=Hash([o_custkey@1], 4), input_partitions=4
                                  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_custkey, o_totalprice, o_orderdate]
                      CoalesceBatchesExec: target_batch_size=8192
                        RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
                          ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_quantity]

RaySQL Plan
===========

Query Stage #0 (4 -> 4):
ShuffleWriterExec(stage_id=0, output_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))
  AggregateExec: mode=Partial, gby=[l_orderkey@0 as l_orderkey], aggr=[sum(lineitem.l_quantity)]
    ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_quantity]

Query Stage #1 (4 -> 4):
ShuffleWriterExec(stage_id=1, output_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:0..3391370], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:3391370..6782740], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:6782740..6784675, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:0..3389435], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:3389435..6780803]]}, projection=[c_custkey, c_name]

Query Stage #2 (4 -> 4):
ShuffleWriterExec(stage_id=2, output_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_custkey, o_totalprice, o_orderdate]

Query Stage #3 (4 -> 4):
ShuffleWriterExec(stage_id=3, output_partitioning=Hash([Column { name: "o_orderkey", index: 2 }], 4))
  CoalesceBatchesExec: target_batch_size=8192
    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_custkey@0, o_custkey@1)], projection=[c_custkey@0, c_name@1, o_orderkey@2, o_totalprice@4, o_orderdate@5]
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=1, input_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=2, input_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))

Query Stage #4 (4 -> 4):
ShuffleWriterExec(stage_id=4, output_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..52077273], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:52077273..104126391, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..28155], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:28155..52105428], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:52105428..104182701]]}, projection=[l_orderkey, l_quantity]

Query Stage #5 (4 -> 4):
ShuffleWriterExec(stage_id=5, output_partitioning=Hash([Column { name: "c_name", index: 0 }, Column { name: "c_custkey", index: 1 }, Column { name: "o_orderkey", index: 2 }, Column { name: "o_orderdate", index: 3 }, Column { name: "o_totalprice", index: 4 }], 4))
  AggregateExec: mode=Partial, gby=[c_name@1 as c_name, c_custkey@0 as c_custkey, o_orderkey@2 as o_orderkey, o_orderdate@4 as o_orderdate, o_totalprice@3 as o_totalprice], aggr=[sum(lineitem.l_quantity)]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=RightSemi, on=[(l_orderkey@0, o_orderkey@2)]
        ProjectionExec: expr=[l_orderkey@0 as l_orderkey]
          CoalesceBatchesExec: target_batch_size=8192
            FilterExec: sum(lineitem.l_quantity)@1 > Some(31300),21,2
              AggregateExec: mode=FinalPartitioned, gby=[l_orderkey@0 as l_orderkey], aggr=[sum(lineitem.l_quantity)]
                CoalesceBatchesExec: target_batch_size=8192
                  ShuffleReaderExec(stage_id=0, input_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))
        CoalesceBatchesExec: target_batch_size=8192
          HashJoinExec: mode=Partitioned, join_type=Inner, on=[(o_orderkey@2, l_orderkey@0)], projection=[c_custkey@0, c_name@1, o_orderkey@2, o_totalprice@3, o_orderdate@4, l_quantity@6]
            CoalesceBatchesExec: target_batch_size=8192
              ShuffleReaderExec(stage_id=3, input_partitioning=Hash([Column { name: "o_orderkey", index: 2 }], 4))
            CoalesceBatchesExec: target_batch_size=8192
              ShuffleReaderExec(stage_id=4, input_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))

Query Stage #6 (4 -> 4):
ShuffleWriterExec(stage_id=6, output_partitioning=Hash([Column { name: "c_name", index: 0 }, Column { name: "c_custkey", index: 1 }, Column { name: "o_orderkey", index: 2 }, Column { name: "o_orderdate", index: 3 }, Column { name: "o_totalprice", index: 4 }], 4))
  SortExec: TopK(fetch=100), expr=[o_totalprice@4 DESC,o_orderdate@3 ASC NULLS LAST], preserve_partitioning=[true]
    AggregateExec: mode=FinalPartitioned, gby=[c_name@0 as c_name, c_custkey@1 as c_custkey, o_orderkey@2 as o_orderkey, o_orderdate@3 as o_orderdate, o_totalprice@4 as o_totalprice], aggr=[sum(lineitem.l_quantity)]
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=5, input_partitioning=Hash([Column { name: "c_name", index: 0 }, Column { name: "c_custkey", index: 1 }, Column { name: "o_orderkey", index: 2 }, Column { name: "o_orderdate", index: 3 }, Column { name: "o_totalprice", index: 4 }], 4))

Query Stage #7 (1 -> 1):
GlobalLimitExec: skip=0, fetch=100
  SortPreservingMergeExec: [o_totalprice@4 DESC,o_orderdate@3 ASC NULLS LAST], fetch=100
    ShuffleReaderExec(stage_id=6, input_partitioning=Hash([Column { name: "c_name", index: 0 }, Column { name: "c_custkey", index: 1 }, Column { name: "o_orderkey", index: 2 }, Column { name: "o_orderdate", index: 3 }, Column { name: "o_totalprice", index: 4 }], 4))

