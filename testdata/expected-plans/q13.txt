DataFusion Logical Plan
=======================

Sort: custdist DESC NULLS FIRST, c_orders.c_count DESC NULLS FIRST
  Projection: c_orders.c_count, count(*) AS custdist
    Aggregate: groupBy=[[c_orders.c_count]], aggr=[[count(Int64(1)) AS count(*)]]
      SubqueryAlias: c_orders
        Projection: count(orders.o_orderkey) AS c_count
          Aggregate: groupBy=[[customer.c_custkey]], aggr=[[count(orders.o_orderkey)]]
            Projection: customer.c_custkey, orders.o_orderkey
              Left Join: customer.c_custkey = orders.o_custkey
                TableScan: customer projection=[c_custkey]
                Projection: orders.o_orderkey, orders.o_custkey
                  Filter: orders.o_comment NOT LIKE Utf8("%express%requests%")
                    TableScan: orders projection=[o_orderkey, o_custkey, o_comment], partial_filters=[orders.o_comment NOT LIKE Utf8("%express%requests%")]

DataFusion Physical Plan
========================

SortPreservingMergeExec: [custdist@1 DESC,c_count@0 DESC]
  SortExec: expr=[custdist@1 DESC,c_count@0 DESC], preserve_partitioning=[true]
    ProjectionExec: expr=[c_count@0 as c_count, count(*)@1 as custdist]
      AggregateExec: mode=FinalPartitioned, gby=[c_count@0 as c_count], aggr=[count(*)]
        CoalesceBatchesExec: target_batch_size=8192
          RepartitionExec: partitioning=Hash([c_count@0], 4), input_partitions=4
            AggregateExec: mode=Partial, gby=[c_count@0 as c_count], aggr=[count(*)]
              ProjectionExec: expr=[count(orders.o_orderkey)@1 as c_count]
                AggregateExec: mode=SinglePartitioned, gby=[c_custkey@0 as c_custkey], aggr=[count(orders.o_orderkey)]
                  CoalesceBatchesExec: target_batch_size=8192
                    HashJoinExec: mode=Partitioned, join_type=Left, on=[(c_custkey@0, o_custkey@1)], projection=[c_custkey@0, o_orderkey@1]
                      CoalesceBatchesExec: target_batch_size=8192
                        RepartitionExec: partitioning=Hash([c_custkey@0], 4), input_partitions=4
                          ParquetExec: file_groups={4 groups: [[home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:0..3391370], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:3391370..6782740], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:6782740..6784675, home/edmondo/Development/datafusion-ray/data/customer.parquet/part2.parquet:0..3389435], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part2.parquet:3389435..6780803]]}, projection=[c_custkey]
                      CoalesceBatchesExec: target_batch_size=8192
                        RepartitionExec: partitioning=Hash([o_custkey@1], 4), input_partitions=4
                          ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_custkey@1 as o_custkey]
                            CoalesceBatchesExec: target_batch_size=8192
                              FilterExec: o_comment@2 NOT LIKE %express%requests%
                                ParquetExec: file_groups={4 groups: [[home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/edmondo/Development/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_custkey, o_comment], predicate=o_comment@8 NOT LIKE %express%requests%

RaySQL Plan
===========

Query Stage #0 (4 -> 4):
ShuffleWriterExec(stage_id=0, output_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
  ParquetExec: file_groups={4 groups: [[home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:0..3391370], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:3391370..6782740], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part1.parquet:6782740..6784675, home/edmondo/Development/datafusion-ray/data/customer.parquet/part2.parquet:0..3389435], [home/edmondo/Development/datafusion-ray/data/customer.parquet/part2.parquet:3389435..6780803]]}, projection=[c_custkey]

Query Stage #1 (4 -> 4):
ShuffleWriterExec(stage_id=1, output_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))
  ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_custkey@1 as o_custkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: o_comment@2 NOT LIKE %express%requests%
        ParquetExec: file_groups={4 groups: [[home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:0..13635744], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:13635744..27271488], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part1.parquet:27271488..27277388, home/edmondo/Development/datafusion-ray/data/orders.parquet/part2.parquet:0..13629844], [home/edmondo/Development/datafusion-ray/data/orders.parquet/part2.parquet:13629844..27265588]]}, projection=[o_orderkey, o_custkey, o_comment], predicate=o_comment@8 NOT LIKE %express%requests%

Query Stage #2 (4 -> 4):
ShuffleWriterExec(stage_id=2, output_partitioning=Hash([Column { name: "c_count", index: 0 }], 4))
  AggregateExec: mode=Partial, gby=[c_count@0 as c_count], aggr=[count(*)]
    ProjectionExec: expr=[count(orders.o_orderkey)@1 as c_count]
      AggregateExec: mode=SinglePartitioned, gby=[c_custkey@0 as c_custkey], aggr=[count(orders.o_orderkey)]
        CoalesceBatchesExec: target_batch_size=8192
          HashJoinExec: mode=Partitioned, join_type=Left, on=[(c_custkey@0, o_custkey@1)], projection=[c_custkey@0, o_orderkey@1]
            CoalesceBatchesExec: target_batch_size=8192
              ShuffleReaderExec(stage_id=0, input_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
            CoalesceBatchesExec: target_batch_size=8192
              ShuffleReaderExec(stage_id=1, input_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))

Query Stage #3 (4 -> 4):
ShuffleWriterExec(stage_id=3, output_partitioning=Hash([Column { name: "c_count", index: 0 }], 4))
  SortExec: expr=[custdist@1 DESC,c_count@0 DESC], preserve_partitioning=[true]
    ProjectionExec: expr=[c_count@0 as c_count, count(*)@1 as custdist]
      AggregateExec: mode=FinalPartitioned, gby=[c_count@0 as c_count], aggr=[count(*)]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=2, input_partitioning=Hash([Column { name: "c_count", index: 0 }], 4))

Query Stage #4 (4 -> 1):
SortPreservingMergeExec: [custdist@1 DESC,c_count@0 DESC]
  ShuffleReaderExec(stage_id=3, input_partitioning=Hash([Column { name: "c_count", index: 0 }], 4))

