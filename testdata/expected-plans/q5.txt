DataFusion Logical Plan
=======================

Sort: revenue DESC NULLS FIRST
  Projection: nation.n_name, sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount) AS revenue
    Aggregate: groupBy=[[nation.n_name]], aggr=[[sum(lineitem.l_extendedprice * (Decimal128(Some(1),20,0) - lineitem.l_discount)) AS sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)]]
      Projection: lineitem.l_extendedprice, lineitem.l_discount, nation.n_name
        Inner Join: nation.n_regionkey = region.r_regionkey
          Projection: lineitem.l_extendedprice, lineitem.l_discount, nation.n_name, nation.n_regionkey
            Inner Join: supplier.s_nationkey = nation.n_nationkey
              Projection: lineitem.l_extendedprice, lineitem.l_discount, supplier.s_nationkey
                Inner Join: lineitem.l_suppkey = supplier.s_suppkey, customer.c_nationkey = supplier.s_nationkey
                  Projection: customer.c_nationkey, lineitem.l_suppkey, lineitem.l_extendedprice, lineitem.l_discount
                    Inner Join: orders.o_orderkey = lineitem.l_orderkey
                      Projection: customer.c_nationkey, orders.o_orderkey
                        Inner Join: customer.c_custkey = orders.o_custkey
                          TableScan: customer projection=[c_custkey, c_nationkey]
                          Projection: orders.o_orderkey, orders.o_custkey
                            Filter: orders.o_orderdate >= Date32("1994-01-01") AND orders.o_orderdate < Date32("1995-01-01")
                              TableScan: orders projection=[o_orderkey, o_custkey, o_orderdate], partial_filters=[orders.o_orderdate >= Date32("1994-01-01"), orders.o_orderdate < Date32("1995-01-01")]
                      TableScan: lineitem projection=[l_orderkey, l_suppkey, l_extendedprice, l_discount]
                  TableScan: supplier projection=[s_suppkey, s_nationkey]
              TableScan: nation projection=[n_nationkey, n_name, n_regionkey]
          Projection: region.r_regionkey
            Filter: region.r_name = Utf8("AFRICA")
              TableScan: region projection=[r_regionkey, r_name], partial_filters=[region.r_name = Utf8("AFRICA")]

DataFusion Physical Plan
========================

SortPreservingMergeExec: [revenue@1 DESC]
  SortExec: expr=[revenue@1 DESC], preserve_partitioning=[true]
    ProjectionExec: expr=[n_name@0 as n_name, sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)@1 as revenue]
      AggregateExec: mode=FinalPartitioned, gby=[n_name@0 as n_name], aggr=[sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)]
        CoalesceBatchesExec: target_batch_size=8192
          RepartitionExec: partitioning=Hash([n_name@0], 4), input_partitions=4
            AggregateExec: mode=Partial, gby=[n_name@2 as n_name], aggr=[sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)]
              CoalesceBatchesExec: target_batch_size=8192
                HashJoinExec: mode=Partitioned, join_type=Inner, on=[(r_regionkey@0, n_regionkey@3)], projection=[l_extendedprice@1, l_discount@2, n_name@3]
                  CoalesceBatchesExec: target_batch_size=8192
                    RepartitionExec: partitioning=Hash([r_regionkey@0], 4), input_partitions=4
                      RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=2
                        ProjectionExec: expr=[r_regionkey@0 as r_regionkey]
                          CoalesceBatchesExec: target_batch_size=8192
                            FilterExec: r_name@1 = AFRICA
                              ParquetExec: file_groups={2 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/region.parquet/8NlZWnksIQjnYDPs_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/region.parquet/part1.parquet]]}, projection=[r_regionkey, r_name], predicate=r_name@1 = AFRICA, pruning_predicate=CASE WHEN r_name_null_count@2 = r_name_row_count@3 THEN false ELSE r_name_min@0 <= AFRICA AND AFRICA <= r_name_max@1 END, required_guarantees=[r_name in (AFRICA)]
                  CoalesceBatchesExec: target_batch_size=8192
                    RepartitionExec: partitioning=Hash([n_regionkey@3], 4), input_partitions=4
                      ProjectionExec: expr=[l_extendedprice@2 as l_extendedprice, l_discount@3 as l_discount, n_name@0 as n_name, n_regionkey@1 as n_regionkey]
                        CoalesceBatchesExec: target_batch_size=8192
                          HashJoinExec: mode=Partitioned, join_type=Inner, on=[(n_nationkey@0, s_nationkey@2)], projection=[n_name@1, n_regionkey@2, l_extendedprice@3, l_discount@4]
                            CoalesceBatchesExec: target_batch_size=8192
                              RepartitionExec: partitioning=Hash([n_nationkey@0], 4), input_partitions=2
                                ParquetExec: file_groups={2 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/nation.parquet/IftthSxZMytggJzA_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/nation.parquet/part1.parquet]]}, projection=[n_nationkey, n_name, n_regionkey]
                            CoalesceBatchesExec: target_batch_size=8192
                              RepartitionExec: partitioning=Hash([s_nationkey@2], 4), input_partitions=4
                                ProjectionExec: expr=[l_extendedprice@1 as l_extendedprice, l_discount@2 as l_discount, s_nationkey@0 as s_nationkey]
                                  CoalesceBatchesExec: target_batch_size=8192
                                    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_suppkey@0, l_suppkey@1), (s_nationkey@1, c_nationkey@0)], projection=[s_nationkey@1, l_extendedprice@4, l_discount@5]
                                      CoalesceBatchesExec: target_batch_size=8192
                                        RepartitionExec: partitioning=Hash([s_suppkey@0, s_nationkey@1], 4), input_partitions=4
                                          ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/8qdC2hv8M5cVyFo2_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/8qdC2hv8M5cVyFo2_1.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/part1.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/part2.parquet]]}, projection=[s_suppkey, s_nationkey]
                                      CoalesceBatchesExec: target_batch_size=8192
                                        RepartitionExec: partitioning=Hash([l_suppkey@1, c_nationkey@0], 4), input_partitions=4
                                          CoalesceBatchesExec: target_batch_size=8192
                                            HashJoinExec: mode=Partitioned, join_type=Inner, on=[(o_orderkey@1, l_orderkey@0)], projection=[c_nationkey@0, l_suppkey@3, l_extendedprice@4, l_discount@5]
                                              CoalesceBatchesExec: target_batch_size=8192
                                                RepartitionExec: partitioning=Hash([o_orderkey@1], 4), input_partitions=4
                                                  CoalesceBatchesExec: target_batch_size=8192
                                                    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_custkey@0, o_custkey@1)], projection=[c_nationkey@1, o_orderkey@2]
                                                      CoalesceBatchesExec: target_batch_size=8192
                                                        RepartitionExec: partitioning=Hash([c_custkey@0], 4), input_partitions=4
                                                          ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_0.parquet:0..3472684, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_1.parquet:0..3399474], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_1.parquet:3399474..3842490, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_2.parquet:0..3498085, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_3.parquet:0..2931057], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_3.parquet:2931057..3110748, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:0..6692467], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:6692467..6784093, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:0..6780531]]}, projection=[c_custkey, c_nationkey]
                                                      CoalesceBatchesExec: target_batch_size=8192
                                                        RepartitionExec: partitioning=Hash([o_custkey@1], 4), input_partitions=4
                                                          ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_custkey@1 as o_custkey]
                                                            CoalesceBatchesExec: target_batch_size=8192
                                                              FilterExec: o_orderdate@2 >= 1994-01-01 AND o_orderdate@2 < 1995-01-01
                                                                ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_0.parquet:0..13941205, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_1.parquet:0..13831262], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_1.parquet:13831262..13895674, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_2.parquet:0..14344446, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_3.parquet:0..13363609], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_3.parquet:13363609..14369581, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..26766495], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:26766495..27275418, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..27263542]]}, projection=[o_orderkey, o_custkey, o_orderdate], predicate=o_orderdate@4 >= 1994-01-01 AND o_orderdate@4 < 1995-01-01, pruning_predicate=CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_max@0 >= 1994-01-01 END AND CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_min@3 < 1995-01-01 END, required_guarantees=[]
                                              CoalesceBatchesExec: target_batch_size=8192
                                                RepartitionExec: partitioning=Hash([l_orderkey@0], 4), input_partitions=4
                                                  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_0.parquet:0..52711469, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_1.parquet:0..51867435], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_1.parquet:51867435..52551505, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_2.parquet:0..52295377, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_3.parquet:0..51599457], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_3.parquet:51599457..52418452, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..103759909], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:103759909..104163524, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..104175286]]}, projection=[l_orderkey, l_suppkey, l_extendedprice, l_discount]

RaySQL Plan
===========

Query Stage #0 (2 -> 4):
ShuffleWriterExec(stage_id=0, output_partitioning=Hash([Column { name: "r_regionkey", index: 0 }], 4))
  ProjectionExec: expr=[r_regionkey@0 as r_regionkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: r_name@1 = AFRICA
        ParquetExec: file_groups={2 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/region.parquet/8NlZWnksIQjnYDPs_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/region.parquet/part1.parquet]]}, projection=[r_regionkey, r_name], predicate=r_name@1 = AFRICA, pruning_predicate=CASE WHEN r_name_null_count@2 = r_name_row_count@3 THEN false ELSE r_name_min@0 <= AFRICA AND AFRICA <= r_name_max@1 END, required_guarantees=[r_name in (AFRICA)]

Query Stage #1 (2 -> 4):
ShuffleWriterExec(stage_id=1, output_partitioning=Hash([Column { name: "n_nationkey", index: 0 }], 4))
  ParquetExec: file_groups={2 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/nation.parquet/IftthSxZMytggJzA_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/nation.parquet/part1.parquet]]}, projection=[n_nationkey, n_name, n_regionkey]

Query Stage #2 (4 -> 4):
ShuffleWriterExec(stage_id=2, output_partitioning=Hash([Column { name: "s_suppkey", index: 0 }, Column { name: "s_nationkey", index: 1 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/8qdC2hv8M5cVyFo2_0.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/8qdC2hv8M5cVyFo2_1.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/part1.parquet], [home/runner/work/datafusion-ray/datafusion-ray/data/supplier.parquet/part2.parquet]]}, projection=[s_suppkey, s_nationkey]

Query Stage #3 (4 -> 4):
ShuffleWriterExec(stage_id=3, output_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_0.parquet:0..3472684, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_1.parquet:0..3399474], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_1.parquet:3399474..3842490, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_2.parquet:0..3498085, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_3.parquet:0..2931057], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/pWo0Flk4zs96ILRo_3.parquet:2931057..3110748, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:0..6692467], [home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part1.parquet:6692467..6784093, home/runner/work/datafusion-ray/datafusion-ray/data/customer.parquet/part2.parquet:0..6780531]]}, projection=[c_custkey, c_nationkey]

Query Stage #4 (4 -> 4):
ShuffleWriterExec(stage_id=4, output_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))
  ProjectionExec: expr=[o_orderkey@0 as o_orderkey, o_custkey@1 as o_custkey]
    CoalesceBatchesExec: target_batch_size=8192
      FilterExec: o_orderdate@2 >= 1994-01-01 AND o_orderdate@2 < 1995-01-01
        ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_0.parquet:0..13941205, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_1.parquet:0..13831262], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_1.parquet:13831262..13895674, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_2.parquet:0..14344446, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_3.parquet:0..13363609], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/2Wpvnmd29krZIYjA_3.parquet:13363609..14369581, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:0..26766495], [home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part1.parquet:26766495..27275418, home/runner/work/datafusion-ray/datafusion-ray/data/orders.parquet/part2.parquet:0..27263542]]}, projection=[o_orderkey, o_custkey, o_orderdate], predicate=o_orderdate@4 >= 1994-01-01 AND o_orderdate@4 < 1995-01-01, pruning_predicate=CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_max@0 >= 1994-01-01 END AND CASE WHEN o_orderdate_null_count@1 = o_orderdate_row_count@2 THEN false ELSE o_orderdate_min@3 < 1995-01-01 END, required_guarantees=[]

Query Stage #5 (4 -> 4):
ShuffleWriterExec(stage_id=5, output_partitioning=Hash([Column { name: "o_orderkey", index: 1 }], 4))
  CoalesceBatchesExec: target_batch_size=8192
    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(c_custkey@0, o_custkey@1)], projection=[c_nationkey@1, o_orderkey@2]
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=3, input_partitioning=Hash([Column { name: "c_custkey", index: 0 }], 4))
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=4, input_partitioning=Hash([Column { name: "o_custkey", index: 1 }], 4))

Query Stage #6 (4 -> 4):
ShuffleWriterExec(stage_id=6, output_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))
  ParquetExec: file_groups={4 groups: [[home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_0.parquet:0..52711469, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_1.parquet:0..51867435], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_1.parquet:51867435..52551505, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_2.parquet:0..52295377, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_3.parquet:0..51599457], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/Q6UwsIXxM7id3Gm2_3.parquet:51599457..52418452, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:0..103759909], [home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part1.parquet:103759909..104163524, home/runner/work/datafusion-ray/datafusion-ray/data/lineitem.parquet/part2.parquet:0..104175286]]}, projection=[l_orderkey, l_suppkey, l_extendedprice, l_discount]

Query Stage #7 (4 -> 4):
ShuffleWriterExec(stage_id=7, output_partitioning=Hash([Column { name: "l_suppkey", index: 1 }, Column { name: "c_nationkey", index: 0 }], 4))
  CoalesceBatchesExec: target_batch_size=8192
    HashJoinExec: mode=Partitioned, join_type=Inner, on=[(o_orderkey@1, l_orderkey@0)], projection=[c_nationkey@0, l_suppkey@3, l_extendedprice@4, l_discount@5]
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=5, input_partitioning=Hash([Column { name: "o_orderkey", index: 1 }], 4))
      CoalesceBatchesExec: target_batch_size=8192
        ShuffleReaderExec(stage_id=6, input_partitioning=Hash([Column { name: "l_orderkey", index: 0 }], 4))

Query Stage #8 (4 -> 4):
ShuffleWriterExec(stage_id=8, output_partitioning=Hash([Column { name: "s_nationkey", index: 2 }], 4))
  ProjectionExec: expr=[l_extendedprice@1 as l_extendedprice, l_discount@2 as l_discount, s_nationkey@0 as s_nationkey]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_suppkey@0, l_suppkey@1), (s_nationkey@1, c_nationkey@0)], projection=[s_nationkey@1, l_extendedprice@4, l_discount@5]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=2, input_partitioning=Hash([Column { name: "s_suppkey", index: 0 }, Column { name: "s_nationkey", index: 1 }], 4))
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=7, input_partitioning=Hash([Column { name: "l_suppkey", index: 1 }, Column { name: "c_nationkey", index: 0 }], 4))

Query Stage #9 (4 -> 4):
ShuffleWriterExec(stage_id=9, output_partitioning=Hash([Column { name: "n_regionkey", index: 3 }], 4))
  ProjectionExec: expr=[l_extendedprice@2 as l_extendedprice, l_discount@3 as l_discount, n_name@0 as n_name, n_regionkey@1 as n_regionkey]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(n_nationkey@0, s_nationkey@2)], projection=[n_name@1, n_regionkey@2, l_extendedprice@3, l_discount@4]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=1, input_partitioning=Hash([Column { name: "n_nationkey", index: 0 }], 4))
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=8, input_partitioning=Hash([Column { name: "s_nationkey", index: 2 }], 4))

Query Stage #10 (4 -> 4):
ShuffleWriterExec(stage_id=10, output_partitioning=Hash([Column { name: "n_name", index: 0 }], 4))
  AggregateExec: mode=Partial, gby=[n_name@2 as n_name], aggr=[sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)]
    CoalesceBatchesExec: target_batch_size=8192
      HashJoinExec: mode=Partitioned, join_type=Inner, on=[(r_regionkey@0, n_regionkey@3)], projection=[l_extendedprice@1, l_discount@2, n_name@3]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=0, input_partitioning=Hash([Column { name: "r_regionkey", index: 0 }], 4))
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=9, input_partitioning=Hash([Column { name: "n_regionkey", index: 3 }], 4))

Query Stage #11 (4 -> 4):
ShuffleWriterExec(stage_id=11, output_partitioning=Hash([Column { name: "n_name", index: 0 }], 4))
  SortExec: expr=[revenue@1 DESC], preserve_partitioning=[true]
    ProjectionExec: expr=[n_name@0 as n_name, sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)@1 as revenue]
      AggregateExec: mode=FinalPartitioned, gby=[n_name@0 as n_name], aggr=[sum(lineitem.l_extendedprice * Int64(1) - lineitem.l_discount)]
        CoalesceBatchesExec: target_batch_size=8192
          ShuffleReaderExec(stage_id=10, input_partitioning=Hash([Column { name: "n_name", index: 0 }], 4))

Query Stage #12 (4 -> 1):
SortPreservingMergeExec: [revenue@1 DESC]
  ShuffleReaderExec(stage_id=11, input_partitioning=Hash([Column { name: "n_name", index: 0 }], 4))

