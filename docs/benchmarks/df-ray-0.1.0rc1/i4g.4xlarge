=================================================================================================
Spark and DataFusion for Ray TPCH 100 Benchmarks
Machine:                      i4g.4xlarge
Machine On Demand Cost:       1.23552 $/hr
CPU(s):                       Neoverse-N1 16x
MEM:                          126.8G
HD Throughput:                888.24 MB/s (from hdparm)
Data Location:                /data/sf100

df-ray duration:                 870.95s +1.04x faster
df-ray cost:                     $0.2989 +1.04x cheaper

spark duration:                  906.69s
spark cost:                      $0.3112

DataFusion for Ray Settings:
concurrency:                          16
batch_size :                        8192
partitions_per_processor:              4
Ray Workers:                           4
Ray Worker Mem (GB):                  24
Ray Worker CPU:                        3
Ray Head Mem (GB):                     4
Ray Head CPU:                          2

Spark Settings:
Executors:                             4
Executor Mem (GB):                    20
Executor Overhead Mem (GB):            4
Executor CPU:                          3
Driver Mem(GB):                        4
Driver CPU:                            2
=================================================================================================
DataFrame()
+------------+--------------------+--------------------+-----------------------+---------------+
| tpch_query | spark              | df_ray             | change(=df_ray/spark) | change_text   |
+------------+--------------------+--------------------+-----------------------+---------------+
| 1          | 107.42937994003296 | 40.58694672584534  | 0.3778011820276814    | +2.65x faster |
| 2          | 14.26254153251648  | 14.748653411865234 | 1.0340831175313665    |  1.03x slower |
| 3          | 34.457966566085815 | 23.512167930603027 | 0.6823434541765488    | +1.47x faster |
| 4          | 24.979174375534058 | 12.797027349472046 | 0.5123078592223664    | +1.95x faster |
| 5          | 57.75347018241882  | 46.364267349243164 | 0.8027962164489514    | +1.25x faster |
| 6          | 6.254350423812866  | 20.64115333557129  | 3.3002873099310186    |  3.30x slower |
| 7          | 21.208117723464966 | 67.15978837013245  | 3.1667019792060986    |  3.17x slower |
| 8          | 56.11615228652954  | 52.393213748931885 | 0.9336565607957527    | +1.07x faster |
| 9          | 108.6072256565094  | 72.31336116790771  | 0.6658245869995078    | +1.50x faster |
| 10         | 28.727190732955933 | 40.29949235916138  | 1.4028344342396717    |  1.40x slower |
| 11         | 4.468253135681152  | 13.295583248138428 | 2.9755662547331516    |  2.98x slower |
| 12         | 18.66551184654236  | 15.770261764526367 | 0.8448877209572845    | +1.18x faster |
| 13         | 38.409486532211304 | 19.281179428100586 | 0.5019900334239259    | +1.99x faster |
| 14         | 8.859760522842407  | 12.571092128753662 | 1.4188975081598003    |  1.42x slower |
| 15         | 23.616262197494507 | 26.80106806755066  | 1.1348564748910195    |  1.13x slower |
| 16         | 11.123925685882568 | 12.223425388336182 | 1.098840978760672     |  1.10x slower |
| 17         | 119.728675365448   | 82.61100387573242  | 0.6899851152915435    | +1.45x faster |
| 18         | 88.93902206420898  | 116.58043599128723 | 1.3107906213216816    |  1.31x slower |
| 19         | 13.113885879516602 | 34.65487003326416  | 2.642608785195681     |  2.64x slower |
| 20         | 16.772423267364502 | 24.642067432403564 | 1.4692013813145106    |  1.47x slower |
| 21         | 88.84716391563416  | 112.72514128684998 | 1.2687533998709224    |  1.27x slower |
| 22         | 14.35309910774231  | 8.979067087173462  | 0.6255838561255387    | +1.60x faster |
| total      | 906.6930389404297  | 870.9512674808502  | 0.9605800751472101    | +1.04x faster |
+------------+--------------------+--------------------+-----------------------+---------------+
